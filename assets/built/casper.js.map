{"version":3,"sources":["ghost-search.js","jquery.fitvids.js","custom.js","gallery-card.js","infinite-scroll.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","$","fn","fitVids","options","settings","customSelector","ignore","document","getElementById","head","getElementsByTagName","div","createElement","innerHTML","appendChild","childNodes","extend","this","each","selectors","push","ignoreList","$allVideos","find","join","not","$this","parents","tagName","toLowerCase","parent","css","isNaN","attr","aspectRatio","parseInt","height","width","videoName","_count","wrap","removeAttr","window","jQuery","Zepto","onload","allowed","querySelectorAll","denied","style","display","images","setAttribute","getAttribute","postCardImages","navigator","userAgent","indexOf","match","rightNav","addEventListener","forEach","image","container","closest","ratio","attributes","flex","root","UMD","define","amd","module","exports","fuzzysort","isNode","require","preparedCache","Map","preparedSearchCache","noResults","total","matchesSimple","matchesStrict","cleanup","clear","defaultScoreFn","a","max","result","score","getValue","prop","tmp","undefined","segs","Array","isArray","split","len","isObj","x","fastpriorityqueue","r","o","e","n","c","f","add","poll","peek","replaceTop","q","fuzzysortNew","instanceOptions","single","search","getPreparedSearch","getPrepared","allowTypo","algorithm","algorithmNoTypo","go","targets","searchLowerCode","prepareSearch","threshold","limit","resultsLen","limitedCount","targetsLen","keys","scoreFn","keysLen","objResults","keyI","_targetLowerCodes","_nextBeginningIndexes","indexes","results","goAsync","canceled","p","Promise","resolve","reject","iCurrent","step","startMs","Date","now","setImmediate","setTimeout","cancel","highlight","hOpen","hClose","highlighted","matchesIndex","opened","targetLen","matchesBest","char","substr","prepare","prepareLowerCodes","prepareSlow","prepareNextBeginningIndexes","targetPrepared","get","set","searchPrepared","searchLowerCodes","prepared","targetLowerCodes","searchLen","searchI","targetI","typoSimpleI","matchesSimpleLen","typoStrictI","successStrict","matchesStrictLen","nextBeginningIndexes","firstPossibleI","matchesBestLen","lastTargetI","str","strLen","lowerCodes","lower","charCodeAt","prepareBeginningIndexes","beginningIndexes","beginningIndexesLen","wasUpper","wasAlphanum","targetCode","isUpper","isAlphanum","isBeginning","lastIsBeginning","lastIsBeginningI","new","GhostSearch","args","defaults","url","version","input","button","defaultValue","template","location","protocol","host","slug","title","trigger","check","api","resource","parameters","fields","filter","include","order","formats","page","on","beforeDisplay","afterDisplay","beforeFetch","afterFetch","merged","mergeDeep","assign","init","source","_this","_this2","ghostAPI","GhostContentAPI","browse","then","data","err","console","error","htmlString","trim","firstChild","removeChild","inputValue","createElementFromHTML","_this3","displayResults","preventDefault","log","checkArgs","_this4","validate","fetch","nextElement","querySelector","feedElement","buffer","ticking","loading","lastScrollY","scrollY","lastWindowHeight","innerHeight","lastDocumentHeight","documentElement","scrollHeight","onScroll","passive","onResize","requestTick","onPageLoad","status","removeEventListener","response","item","importNode","resNextElement","href","onUpdate","xhr","XMLHttpRequest","responseType","open","send","requestAnimationFrame"],"mappings":"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","file":"casper.js","sourcesContent":["/**\r\n * ghost-search 1.1.0 (https://github.com/HauntedThemes/ghost-search)\r\n * A simple but powerful search library for Ghost Blogging Platform.\r\n * Copyright 2019 Haunted Themes (https://www.hauntedthemes.com)\r\n * Released under MIT License\r\n * Released on: 15 Nov 2019\r\n */\r\n\r\n/*\r\nWHAT: SublimeText-like Fuzzy Search\r\nUSAGE:\r\n  fuzzysort.single('fs', 'Fuzzy Search') // {score: -16}\r\n  fuzzysort.single('test', 'test') // {score: 0}\r\n  fuzzysort.single('doesnt exist', 'target') // null\r\n  fuzzysort.go('mr', ['Monitor.cpp', 'MeshRenderer.cpp'])\r\n  // [{score: -18, target: \"MeshRenderer.cpp\"}, {score: -6009, target: \"Monitor.cpp\"}]\r\n  fuzzysort.highlight(fuzzysort.single('fs', 'Fuzzy Search'), '<b>', '</b>')\r\n  // <b>F</b>uzzy <b>S</b>earch\r\n*/\r\n\r\n// UMD (Universal Module Definition) for fuzzysort\r\n;(function(root, UMD) {\r\n    if(typeof define === 'function' && define.amd) define([], UMD)\r\n    else if(typeof module === 'object' && module.exports) module.exports = UMD()\r\n    else root.fuzzysort = UMD()\r\n  })(this, function UMD() { function fuzzysortNew(instanceOptions) {\r\n  \r\n    var fuzzysort = {\r\n  \r\n      single: function(search, target, options) {\r\n        if(!search) return null\r\n        if(!isObj(search)) search = fuzzysort.getPreparedSearch(search)\r\n  \r\n        if(!target) return null\r\n        if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n  \r\n        var allowTypo = options && options.allowTypo!==undefined ? options.allowTypo\r\n          : instanceOptions && instanceOptions.allowTypo!==undefined ? instanceOptions.allowTypo\r\n          : true\r\n        var algorithm = allowTypo ? fuzzysort.algorithm : fuzzysort.algorithmNoTypo\r\n        return algorithm(search, target, search[0])\r\n        // var threshold = options && options.threshold || instanceOptions && instanceOptions.threshold || -9007199254740991\r\n        // var result = algorithm(search, target, search[0])\r\n        // if(result === null) return null\r\n        // if(result.score < threshold) return null\r\n        // return result\r\n      },\r\n  \r\n      go: function(search, targets, options) {\r\n        if(!search) return noResults\r\n        search = fuzzysort.prepareSearch(search)\r\n        var searchLowerCode = search[0]\r\n  \r\n        var threshold = options && options.threshold || instanceOptions && instanceOptions.threshold || -9007199254740991\r\n        var limit = options && options.limit || instanceOptions && instanceOptions.limit || 9007199254740991\r\n        var allowTypo = options && options.allowTypo!==undefined ? options.allowTypo\r\n          : instanceOptions && instanceOptions.allowTypo!==undefined ? instanceOptions.allowTypo\r\n          : true\r\n        var algorithm = allowTypo ? fuzzysort.algorithm : fuzzysort.algorithmNoTypo\r\n        var resultsLen = 0; var limitedCount = 0\r\n        var targetsLen = targets.length\r\n  \r\n        // This code is copy/pasted 3 times for performance reasons [options.keys, options.key, no keys]\r\n  \r\n        // options.keys\r\n        if(options && options.keys) {\r\n          var scoreFn = options.scoreFn || defaultScoreFn\r\n          var keys = options.keys\r\n          var keysLen = keys.length\r\n          for(var i = targetsLen - 1; i >= 0; --i) { var obj = targets[i]\r\n            var objResults = new Array(keysLen)\r\n            for (var keyI = keysLen - 1; keyI >= 0; --keyI) {\r\n              var key = keys[keyI]\r\n              var target = getValue(obj, key)\r\n              if(!target) { objResults[keyI] = null; continue }\r\n              if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n  \r\n              objResults[keyI] = algorithm(search, target, searchLowerCode)\r\n            }\r\n            objResults.obj = obj // before scoreFn so scoreFn can use it\r\n            var score = scoreFn(objResults)\r\n            if(score === null) continue\r\n            if(score < threshold) continue\r\n            objResults.score = score\r\n            if(resultsLen < limit) { q.add(objResults); ++resultsLen }\r\n            else {\r\n              ++limitedCount\r\n              if(score > q.peek().score) q.replaceTop(objResults)\r\n            }\r\n          }\r\n  \r\n        // options.key\r\n        } else if(options && options.key) {\r\n          var key = options.key\r\n          for(var i = targetsLen - 1; i >= 0; --i) { var obj = targets[i]\r\n            var target = getValue(obj, key)\r\n            if(!target) continue\r\n            if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n  \r\n            var result = algorithm(search, target, searchLowerCode)\r\n            if(result === null) continue\r\n            if(result.score < threshold) continue\r\n  \r\n            // have to clone result so duplicate targets from different obj can each reference the correct obj\r\n            result = {target:result.target, _targetLowerCodes:null, _nextBeginningIndexes:null, score:result.score, indexes:result.indexes, obj:obj} // hidden\r\n  \r\n            if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n            else {\r\n              ++limitedCount\r\n              if(result.score > q.peek().score) q.replaceTop(result)\r\n            }\r\n          }\r\n  \r\n        // no keys\r\n        } else {\r\n          for(var i = targetsLen - 1; i >= 0; --i) { var target = targets[i]\r\n            if(!target) continue\r\n            if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n  \r\n            var result = algorithm(search, target, searchLowerCode)\r\n            if(result === null) continue\r\n            if(result.score < threshold) continue\r\n            if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n            else {\r\n              ++limitedCount\r\n              if(result.score > q.peek().score) q.replaceTop(result)\r\n            }\r\n          }\r\n        }\r\n  \r\n        if(resultsLen === 0) return noResults\r\n        var results = new Array(resultsLen)\r\n        for(var i = resultsLen - 1; i >= 0; --i) results[i] = q.poll()\r\n        results.total = resultsLen + limitedCount\r\n        return results\r\n      },\r\n  \r\n      goAsync: function(search, targets, options) {\r\n        var canceled = false\r\n        var p = new Promise(function(resolve, reject) {\r\n          if(!search) return resolve(noResults)\r\n          search = fuzzysort.prepareSearch(search)\r\n          var searchLowerCode = search[0]\r\n  \r\n          var q = fastpriorityqueue()\r\n          var iCurrent = targets.length - 1\r\n          var threshold = options && options.threshold || instanceOptions && instanceOptions.threshold || -9007199254740991\r\n          var limit = options && options.limit || instanceOptions && instanceOptions.limit || 9007199254740991\r\n          var allowTypo = options && options.allowTypo!==undefined ? options.allowTypo\r\n            : instanceOptions && instanceOptions.allowTypo!==undefined ? instanceOptions.allowTypo\r\n            : true\r\n          var algorithm = allowTypo ? fuzzysort.algorithm : fuzzysort.algorithmNoTypo\r\n          var resultsLen = 0; var limitedCount = 0\r\n          function step() {\r\n            if(canceled) return reject('canceled')\r\n  \r\n            var startMs = Date.now()\r\n  \r\n            // This code is copy/pasted 3 times for performance reasons [options.keys, options.key, no keys]\r\n  \r\n            // options.keys\r\n            if(options && options.keys) {\r\n              var scoreFn = options.scoreFn || defaultScoreFn\r\n              var keys = options.keys\r\n              var keysLen = keys.length\r\n              for(; iCurrent >= 0; --iCurrent) { var obj = targets[iCurrent]\r\n                var objResults = new Array(keysLen)\r\n                for (var keyI = keysLen - 1; keyI >= 0; --keyI) {\r\n                  var key = keys[keyI]\r\n                  var target = getValue(obj, key)\r\n                  if(!target) { objResults[keyI] = null; continue }\r\n                  if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n  \r\n                  objResults[keyI] = algorithm(search, target, searchLowerCode)\r\n                }\r\n                objResults.obj = obj // before scoreFn so scoreFn can use it\r\n                var score = scoreFn(objResults)\r\n                if(score === null) continue\r\n                if(score < threshold) continue\r\n                objResults.score = score\r\n                if(resultsLen < limit) { q.add(objResults); ++resultsLen }\r\n                else {\r\n                  ++limitedCount\r\n                  if(score > q.peek().score) q.replaceTop(objResults)\r\n                }\r\n  \r\n                if(iCurrent%1000/*itemsPerCheck*/ === 0) {\r\n                  if(Date.now() - startMs >= 10/*asyncInterval*/) {\r\n                    isNode?setImmediate(step):setTimeout(step)\r\n                    return\r\n                  }\r\n                }\r\n              }\r\n  \r\n            // options.key\r\n            } else if(options && options.key) {\r\n              var key = options.key\r\n              for(; iCurrent >= 0; --iCurrent) { var obj = targets[iCurrent]\r\n                var target = getValue(obj, key)\r\n                if(!target) continue\r\n                if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n  \r\n                var result = algorithm(search, target, searchLowerCode)\r\n                if(result === null) continue\r\n                if(result.score < threshold) continue\r\n  \r\n                // have to clone result so duplicate targets from different obj can each reference the correct obj\r\n                result = {target:result.target, _targetLowerCodes:null, _nextBeginningIndexes:null, score:result.score, indexes:result.indexes, obj:obj} // hidden\r\n  \r\n                if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n                else {\r\n                  ++limitedCount\r\n                  if(result.score > q.peek().score) q.replaceTop(result)\r\n                }\r\n  \r\n                if(iCurrent%1000/*itemsPerCheck*/ === 0) {\r\n                  if(Date.now() - startMs >= 10/*asyncInterval*/) {\r\n                    isNode?setImmediate(step):setTimeout(step)\r\n                    return\r\n                  }\r\n                }\r\n              }\r\n  \r\n            // no keys\r\n            } else {\r\n              for(; iCurrent >= 0; --iCurrent) { var target = targets[iCurrent]\r\n                if(!target) continue\r\n                if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n  \r\n                var result = algorithm(search, target, searchLowerCode)\r\n                if(result === null) continue\r\n                if(result.score < threshold) continue\r\n                if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n                else {\r\n                  ++limitedCount\r\n                  if(result.score > q.peek().score) q.replaceTop(result)\r\n                }\r\n  \r\n                if(iCurrent%1000/*itemsPerCheck*/ === 0) {\r\n                  if(Date.now() - startMs >= 10/*asyncInterval*/) {\r\n                    isNode?setImmediate(step):setTimeout(step)\r\n                    return\r\n                  }\r\n                }\r\n              }\r\n            }\r\n  \r\n            if(resultsLen === 0) return resolve(noResults)\r\n            var results = new Array(resultsLen)\r\n            for(var i = resultsLen - 1; i >= 0; --i) results[i] = q.poll()\r\n            results.total = resultsLen + limitedCount\r\n            resolve(results)\r\n          }\r\n  \r\n          isNode?setImmediate(step):step()\r\n        })\r\n        p.cancel = function() { canceled = true }\r\n        return p\r\n      },\r\n  \r\n      highlight: function(result, hOpen, hClose) {\r\n        if(result === null) return null\r\n        if(hOpen === undefined) hOpen = '<b>'\r\n        if(hClose === undefined) hClose = '</b>'\r\n        var highlighted = ''\r\n        var matchesIndex = 0\r\n        var opened = false\r\n        var target = result.target\r\n        var targetLen = target.length\r\n        var matchesBest = result.indexes\r\n        for(var i = 0; i < targetLen; ++i) { var char = target[i]\r\n          if(matchesBest[matchesIndex] === i) {\r\n            ++matchesIndex\r\n            if(!opened) { opened = true\r\n              highlighted += hOpen\r\n            }\r\n  \r\n            if(matchesIndex === matchesBest.length) {\r\n              highlighted += char + hClose + target.substr(i+1)\r\n              break\r\n            }\r\n          } else {\r\n            if(opened) { opened = false\r\n              highlighted += hClose\r\n            }\r\n          }\r\n          highlighted += char\r\n        }\r\n  \r\n        return highlighted\r\n      },\r\n  \r\n      prepare: function(target) {\r\n        if(!target) return\r\n        return {target:target, _targetLowerCodes:fuzzysort.prepareLowerCodes(target), _nextBeginningIndexes:null, score:null, indexes:null, obj:null} // hidden\r\n      },\r\n      prepareSlow: function(target) {\r\n        if(!target) return\r\n        return {target:target, _targetLowerCodes:fuzzysort.prepareLowerCodes(target), _nextBeginningIndexes:fuzzysort.prepareNextBeginningIndexes(target), score:null, indexes:null, obj:null} // hidden\r\n      },\r\n      prepareSearch: function(search) {\r\n        if(!search) return\r\n        return fuzzysort.prepareLowerCodes(search)\r\n      },\r\n  \r\n  \r\n  \r\n      // Below this point is only internal code\r\n      // Below this point is only internal code\r\n      // Below this point is only internal code\r\n      // Below this point is only internal code\r\n  \r\n  \r\n  \r\n      getPrepared: function(target) {\r\n        if(target.length > 999) return fuzzysort.prepare(target) // don't cache huge targets\r\n        var targetPrepared = preparedCache.get(target)\r\n        if(targetPrepared !== undefined) return targetPrepared\r\n        targetPrepared = fuzzysort.prepare(target)\r\n        preparedCache.set(target, targetPrepared)\r\n        return targetPrepared\r\n      },\r\n      getPreparedSearch: function(search) {\r\n        if(search.length > 999) return fuzzysort.prepareSearch(search) // don't cache huge searches\r\n        var searchPrepared = preparedSearchCache.get(search)\r\n        if(searchPrepared !== undefined) return searchPrepared\r\n        searchPrepared = fuzzysort.prepareSearch(search)\r\n        preparedSearchCache.set(search, searchPrepared)\r\n        return searchPrepared\r\n      },\r\n  \r\n      algorithm: function(searchLowerCodes, prepared, searchLowerCode) {\r\n        var targetLowerCodes = prepared._targetLowerCodes\r\n        var searchLen = searchLowerCodes.length\r\n        var targetLen = targetLowerCodes.length\r\n        var searchI = 0 // where we at\r\n        var targetI = 0 // where you at\r\n        var typoSimpleI = 0\r\n        var matchesSimpleLen = 0\r\n  \r\n        // very basic fuzzy match; to remove non-matching targets ASAP!\r\n        // walk through target. find sequential matches.\r\n        // if all chars aren't found then exit\r\n        for(;;) {\r\n          var isMatch = searchLowerCode === targetLowerCodes[targetI]\r\n          if(isMatch) {\r\n            matchesSimple[matchesSimpleLen++] = targetI\r\n            ++searchI; if(searchI === searchLen) break\r\n            searchLowerCode = searchLowerCodes[typoSimpleI===0?searchI : (typoSimpleI===searchI?searchI+1 : (typoSimpleI===searchI-1?searchI-1 : searchI))]\r\n          }\r\n  \r\n          ++targetI; if(targetI >= targetLen) { // Failed to find searchI\r\n            // Check for typo or exit\r\n            // we go as far as possible before trying to transpose\r\n            // then we transpose backwards until we reach the beginning\r\n            for(;;) {\r\n              if(searchI <= 1) return null // not allowed to transpose first char\r\n              if(typoSimpleI === 0) { // we haven't tried to transpose yet\r\n                --searchI\r\n                var searchLowerCodeNew = searchLowerCodes[searchI]\r\n                if(searchLowerCode === searchLowerCodeNew) continue // doesn't make sense to transpose a repeat char\r\n                typoSimpleI = searchI\r\n              } else {\r\n                if(typoSimpleI === 1) return null // reached the end of the line for transposing\r\n                --typoSimpleI\r\n                searchI = typoSimpleI\r\n                searchLowerCode = searchLowerCodes[searchI + 1]\r\n                var searchLowerCodeNew = searchLowerCodes[searchI]\r\n                if(searchLowerCode === searchLowerCodeNew) continue // doesn't make sense to transpose a repeat char\r\n              }\r\n              matchesSimpleLen = searchI\r\n              targetI = matchesSimple[matchesSimpleLen - 1] + 1\r\n              break\r\n            }\r\n          }\r\n        }\r\n  \r\n        var searchI = 0\r\n        var typoStrictI = 0\r\n        var successStrict = false\r\n        var matchesStrictLen = 0\r\n  \r\n        var nextBeginningIndexes = prepared._nextBeginningIndexes\r\n        if(nextBeginningIndexes === null) nextBeginningIndexes = prepared._nextBeginningIndexes = fuzzysort.prepareNextBeginningIndexes(prepared.target)\r\n        var firstPossibleI = targetI = matchesSimple[0]===0 ? 0 : nextBeginningIndexes[matchesSimple[0]-1]\r\n  \r\n        // Our target string successfully matched all characters in sequence!\r\n        // Let's try a more advanced and strict test to improve the score\r\n        // only count it as a match if it's consecutive or a beginning character!\r\n        if(targetI !== targetLen) for(;;) {\r\n          if(targetI >= targetLen) {\r\n            // We failed to find a good spot for this search char, go back to the previous search char and force it forward\r\n            if(searchI <= 0) { // We failed to push chars forward for a better match\r\n              // transpose, starting from the beginning\r\n              ++typoStrictI; if(typoStrictI > searchLen-2) break\r\n              if(searchLowerCodes[typoStrictI] === searchLowerCodes[typoStrictI+1]) continue // doesn't make sense to transpose a repeat char\r\n              targetI = firstPossibleI\r\n              continue\r\n            }\r\n  \r\n            --searchI\r\n            var lastMatch = matchesStrict[--matchesStrictLen]\r\n            targetI = nextBeginningIndexes[lastMatch]\r\n  \r\n          } else {\r\n            var isMatch = searchLowerCodes[typoStrictI===0?searchI : (typoStrictI===searchI?searchI+1 : (typoStrictI===searchI-1?searchI-1 : searchI))] === targetLowerCodes[targetI]\r\n            if(isMatch) {\r\n              matchesStrict[matchesStrictLen++] = targetI\r\n              ++searchI; if(searchI === searchLen) { successStrict = true; break }\r\n              ++targetI\r\n            } else {\r\n              targetI = nextBeginningIndexes[targetI]\r\n            }\r\n          }\r\n        }\r\n  \r\n        { // tally up the score & keep track of matches for highlighting later\r\n          if(successStrict) { var matchesBest = matchesStrict; var matchesBestLen = matchesStrictLen }\r\n          else { var matchesBest = matchesSimple; var matchesBestLen = matchesSimpleLen }\r\n          var score = 0\r\n          var lastTargetI = -1\r\n          for(var i = 0; i < searchLen; ++i) { var targetI = matchesBest[i]\r\n            // score only goes down if they're not consecutive\r\n            if(lastTargetI !== targetI - 1) score -= targetI\r\n            lastTargetI = targetI\r\n          }\r\n          if(!successStrict) {\r\n            score *= 1000\r\n            if(typoSimpleI !== 0) score += -20/*typoPenalty*/\r\n          } else {\r\n            if(typoStrictI !== 0) score += -20/*typoPenalty*/\r\n          }\r\n          score -= targetLen - searchLen\r\n          prepared.score = score\r\n          prepared.indexes = new Array(matchesBestLen); for(var i = matchesBestLen - 1; i >= 0; --i) prepared.indexes[i] = matchesBest[i]\r\n  \r\n          return prepared\r\n        }\r\n      },\r\n  \r\n      algorithmNoTypo: function(searchLowerCodes, prepared, searchLowerCode) {\r\n        var targetLowerCodes = prepared._targetLowerCodes\r\n        var searchLen = searchLowerCodes.length\r\n        var targetLen = targetLowerCodes.length\r\n        var searchI = 0 // where we at\r\n        var targetI = 0 // where you at\r\n        var matchesSimpleLen = 0\r\n  \r\n        // very basic fuzzy match; to remove non-matching targets ASAP!\r\n        // walk through target. find sequential matches.\r\n        // if all chars aren't found then exit\r\n        for(;;) {\r\n          var isMatch = searchLowerCode === targetLowerCodes[targetI]\r\n          if(isMatch) {\r\n            matchesSimple[matchesSimpleLen++] = targetI\r\n            ++searchI; if(searchI === searchLen) break\r\n            searchLowerCode = searchLowerCodes[searchI]\r\n          }\r\n          ++targetI; if(targetI >= targetLen) return null // Failed to find searchI\r\n        }\r\n  \r\n        var searchI = 0\r\n        var successStrict = false\r\n        var matchesStrictLen = 0\r\n  \r\n        var nextBeginningIndexes = prepared._nextBeginningIndexes\r\n        if(nextBeginningIndexes === null) nextBeginningIndexes = prepared._nextBeginningIndexes = fuzzysort.prepareNextBeginningIndexes(prepared.target)\r\n        var firstPossibleI = targetI = matchesSimple[0]===0 ? 0 : nextBeginningIndexes[matchesSimple[0]-1]\r\n  \r\n        // Our target string successfully matched all characters in sequence!\r\n        // Let's try a more advanced and strict test to improve the score\r\n        // only count it as a match if it's consecutive or a beginning character!\r\n        if(targetI !== targetLen) for(;;) {\r\n          if(targetI >= targetLen) {\r\n            // We failed to find a good spot for this search char, go back to the previous search char and force it forward\r\n            if(searchI <= 0) break // We failed to push chars forward for a better match\r\n  \r\n            --searchI\r\n            var lastMatch = matchesStrict[--matchesStrictLen]\r\n            targetI = nextBeginningIndexes[lastMatch]\r\n  \r\n          } else {\r\n            var isMatch = searchLowerCodes[searchI] === targetLowerCodes[targetI]\r\n            if(isMatch) {\r\n              matchesStrict[matchesStrictLen++] = targetI\r\n              ++searchI; if(searchI === searchLen) { successStrict = true; break }\r\n              ++targetI\r\n            } else {\r\n              targetI = nextBeginningIndexes[targetI]\r\n            }\r\n          }\r\n        }\r\n  \r\n        { // tally up the score & keep track of matches for highlighting later\r\n          if(successStrict) { var matchesBest = matchesStrict; var matchesBestLen = matchesStrictLen }\r\n          else { var matchesBest = matchesSimple; var matchesBestLen = matchesSimpleLen }\r\n          var score = 0\r\n          var lastTargetI = -1\r\n          for(var i = 0; i < searchLen; ++i) { var targetI = matchesBest[i]\r\n            // score only goes down if they're not consecutive\r\n            if(lastTargetI !== targetI - 1) score -= targetI\r\n            lastTargetI = targetI\r\n          }\r\n          if(!successStrict) score *= 1000\r\n          score -= targetLen - searchLen\r\n          prepared.score = score\r\n          prepared.indexes = new Array(matchesBestLen); for(var i = matchesBestLen - 1; i >= 0; --i) prepared.indexes[i] = matchesBest[i]\r\n  \r\n          return prepared\r\n        }\r\n      },\r\n  \r\n      prepareLowerCodes: function(str) {\r\n        var strLen = str.length\r\n        var lowerCodes = [] // new Array(strLen)    sparse array is too slow\r\n        var lower = str.toLowerCase()\r\n        for(var i = 0; i < strLen; ++i) lowerCodes[i] = lower.charCodeAt(i)\r\n        return lowerCodes\r\n      },\r\n      prepareBeginningIndexes: function(target) {\r\n        var targetLen = target.length\r\n        var beginningIndexes = []; var beginningIndexesLen = 0\r\n        var wasUpper = false\r\n        var wasAlphanum = false\r\n        for(var i = 0; i < targetLen; ++i) {\r\n          var targetCode = target.charCodeAt(i)\r\n          var isUpper = targetCode>=65&&targetCode<=90\r\n          var isAlphanum = isUpper || targetCode>=97&&targetCode<=122 || targetCode>=48&&targetCode<=57\r\n          var isBeginning = isUpper && !wasUpper || !wasAlphanum || !isAlphanum\r\n          wasUpper = isUpper\r\n          wasAlphanum = isAlphanum\r\n          if(isBeginning) beginningIndexes[beginningIndexesLen++] = i\r\n        }\r\n        return beginningIndexes\r\n      },\r\n      prepareNextBeginningIndexes: function(target) {\r\n        var targetLen = target.length\r\n        var beginningIndexes = fuzzysort.prepareBeginningIndexes(target)\r\n        var nextBeginningIndexes = [] // new Array(targetLen)     sparse array is too slow\r\n        var lastIsBeginning = beginningIndexes[0]\r\n        var lastIsBeginningI = 0\r\n        for(var i = 0; i < targetLen; ++i) {\r\n          if(lastIsBeginning > i) {\r\n            nextBeginningIndexes[i] = lastIsBeginning\r\n          } else {\r\n            lastIsBeginning = beginningIndexes[++lastIsBeginningI]\r\n            nextBeginningIndexes[i] = lastIsBeginning===undefined ? targetLen : lastIsBeginning\r\n          }\r\n        }\r\n        return nextBeginningIndexes\r\n      },\r\n  \r\n      cleanup: cleanup,\r\n      new: fuzzysortNew,\r\n    }\r\n    return fuzzysort\r\n  } // fuzzysortNew\r\n  \r\n  // This stuff is outside fuzzysortNew, because it's shared with instances of fuzzysort.new()\r\n  var isNode = typeof require !== 'undefined' && typeof window === 'undefined'\r\n  // var MAX_INT = Number.MAX_SAFE_INTEGER\r\n  // var MIN_INT = Number.MIN_VALUE\r\n  var preparedCache = new Map()\r\n  var preparedSearchCache = new Map()\r\n  var noResults = []; noResults.total = 0\r\n  var matchesSimple = []; var matchesStrict = []\r\n  function cleanup() { preparedCache.clear(); preparedSearchCache.clear(); matchesSimple = []; matchesStrict = [] }\r\n  function defaultScoreFn(a) {\r\n    var max = -9007199254740991\r\n    for (var i = a.length - 1; i >= 0; --i) {\r\n      var result = a[i]; if(result === null) continue\r\n      var score = result.score\r\n      if(score > max) max = score\r\n    }\r\n    if(max === -9007199254740991) return null\r\n    return max\r\n  }\r\n  \r\n  // prop = 'key'              2.5ms optimized for this case, seems to be about as fast as direct obj[prop]\r\n  // prop = 'key1.key2'        10ms\r\n  // prop = ['key1', 'key2']   27ms\r\n  function getValue(obj, prop) {\r\n    var tmp = obj[prop]; if(tmp !== undefined) return tmp\r\n    var segs = prop\r\n    if(!Array.isArray(prop)) segs = prop.split('.')\r\n    var len = segs.length\r\n    var i = -1\r\n    while (obj && (++i < len)) obj = obj[segs[i]]\r\n    return obj\r\n  }\r\n  \r\n  function isObj(x) { return typeof x === 'object' } // faster as a function\r\n  \r\n  // Hacked version of https://github.com/lemire/FastPriorityQueue.js\r\n  var fastpriorityqueue=function(){var r=[],o=0,e={};function n(){for(var e=0,n=r[e],c=1;c<o;){var f=c+1;e=c,f<o&&r[f].score<r[c].score&&(e=f),r[e-1>>1]=r[e],c=1+(e<<1)}for(var a=e-1>>1;e>0&&n.score<r[a].score;a=(e=a)-1>>1)r[e]=r[a];r[e]=n}return e.add=function(e){var n=o;r[o++]=e;for(var c=n-1>>1;n>0&&e.score<r[c].score;c=(n=c)-1>>1)r[n]=r[c];r[n]=e},e.poll=function(){if(0!==o){var e=r[0];return r[0]=r[--o],n(),e}},e.peek=function(e){if(0!==o)return r[0]},e.replaceTop=function(o){r[0]=o,n()},e};\r\n  var q = fastpriorityqueue() // reuse this, except for async, it needs to make its own\r\n  \r\n  return fuzzysortNew()\r\n  }) // UMD\r\n  \r\n  // TODO: (performance) wasm version!?\r\n  \r\n  // TODO: (performance) layout memory in an optimal way to go fast by avoiding cache misses\r\n  \r\n  // TODO: (performance) preparedCache is a memory leak\r\n  \r\n  // TODO: (like sublime) backslash === forwardslash\r\n  \r\n  // TODO: (performance) i have no idea how well optizmied the allowing typos algorithm is\r\n  \r\n  'use strict';\r\n  /**\r\n   * @requires ../node_modules/fuzzysort/fuzzysort.js\r\n   */\r\n  \r\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n  \r\n  function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\r\n  \r\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n  \r\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n  \r\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n  \r\n  var GhostSearch =\r\n  /*#__PURE__*/\r\n  function () {\r\n    function GhostSearch(args) {\r\n      _classCallCheck(this, GhostSearch);\r\n  \r\n      this.check = false;\r\n      var defaults = {\r\n        url: '',\r\n        key: '',\r\n        version: 'v3',\r\n        input: '#ghost-search-field',\r\n        results: '#ghost-search-results',\r\n        button: '',\r\n        defaultValue: '',\r\n        template: function template(result) {\r\n          var url = [location.protocol, '//', window.location.host].join('');\r\n          return '<a href=\"' + url + '/' + result.slug + '/\">' + result.title + '</a>';\r\n        },\r\n        trigger: 'focus',\r\n        options: {\r\n          keys: ['title'],\r\n          limit: 10,\r\n          threshold: -3500,\r\n          allowTypo: false\r\n        },\r\n        api: {\r\n          resource: 'posts',\r\n          parameters: {\r\n            limit: 'all',\r\n            fields: ['title', 'slug'],\r\n            filter: '',\r\n            include: '',\r\n            order: '',\r\n            formats: '',\r\n            page: ''\r\n          }\r\n        },\r\n        on: {\r\n          beforeDisplay: function beforeDisplay() {},\r\n          afterDisplay: function afterDisplay(results) {},\r\n          beforeFetch: function beforeFetch() {},\r\n          afterFetch: function afterFetch(results) {}\r\n        }\r\n      };\r\n      var merged = this.mergeDeep(defaults, args);\r\n      Object.assign(this, merged);\r\n      this.init();\r\n    }\r\n  \r\n    _createClass(GhostSearch, [{\r\n      key: \"mergeDeep\",\r\n      value: function mergeDeep(target, source) {\r\n        var _this = this;\r\n  \r\n        if (target && _typeof(target) === 'object' && !Array.isArray(target) && target !== null && source && _typeof(source) === 'object' && !Array.isArray(source) && source !== null) {\r\n          Object.keys(source).forEach(function (key) {\r\n            if (source[key] && _typeof(source[key]) === 'object' && !Array.isArray(source[key]) && source[key] !== null) {\r\n              if (!target[key]) Object.assign(target, _defineProperty({}, key, {}));\r\n  \r\n              _this.mergeDeep(target[key], source[key]);\r\n            } else {\r\n              Object.assign(target, _defineProperty({}, key, source[key]));\r\n            }\r\n          });\r\n        }\r\n  \r\n        return target;\r\n      }\r\n    }, {\r\n      key: \"fetch\",\r\n      value: function fetch() {\r\n        var _this2 = this;\r\n  \r\n        this.on.beforeFetch();\r\n        var ghostAPI = new GhostContentAPI({\r\n          url: this.url,\r\n          key: this.key,\r\n          version: this.version\r\n        });\r\n        var browse = {};\r\n        var parameters = this.api.parameters;\r\n  \r\n        for (var key in parameters) {\r\n          if (parameters[key] != '') {\r\n            browse[key] = parameters[key];\r\n          }\r\n        }\r\n  \r\n        ghostAPI[this.api.resource].browse(browse).then(function (data) {\r\n          _this2.search(data);\r\n        })[\"catch\"](function (err) {\r\n          console.error(err);\r\n        });\r\n      }\r\n    }, {\r\n      key: \"createElementFromHTML\",\r\n      value: function createElementFromHTML(htmlString) {\r\n        var div = document.createElement('div');\r\n        div.innerHTML = htmlString.trim();\r\n        return div.firstChild;\r\n      }\r\n    }, {\r\n      key: \"displayResults\",\r\n      value: function displayResults(data) {\r\n        if (document.querySelectorAll(this.results)[0].firstChild !== null && document.querySelectorAll(this.results)[0].firstChild !== '') {\r\n          while (document.querySelectorAll(this.results)[0].firstChild) {\r\n            document.querySelectorAll(this.results)[0].removeChild(document.querySelectorAll(this.results)[0].firstChild);\r\n          }\r\n        }\r\n  \r\n        ;\r\n        var inputValue = document.querySelectorAll(this.input)[0].value;\r\n  \r\n        if (this.defaultValue != '') {\r\n          inputValue = this.defaultValue;\r\n        }\r\n  \r\n        var results = fuzzysort.go(inputValue, data, {\r\n          keys: this.options.keys,\r\n          limit: this.options.limit,\r\n          allowTypo: this.options.allowTypo,\r\n          threshold: this.options.threshold\r\n        });\r\n  \r\n        for (var key in results) {\r\n          if (key < results.length) {\r\n            document.querySelectorAll(this.results)[0].appendChild(this.createElementFromHTML(this.template(results[key].obj)));\r\n          }\r\n  \r\n          ;\r\n        }\r\n  \r\n        this.on.afterDisplay(results);\r\n        this.defaultValue = '';\r\n      }\r\n    }, {\r\n      key: \"search\",\r\n      value: function search(data) {\r\n        var _this3 = this;\r\n  \r\n        this.on.afterFetch(data);\r\n        this.check = true;\r\n  \r\n        if (this.defaultValue != '') {\r\n          this.on.beforeDisplay();\r\n          this.displayResults(data);\r\n        }\r\n  \r\n        if (this.button != '') {\r\n          var button = document.getElementById('search-btn');\r\n          var form = document.getElementById('search-form');\r\n\r\n          \r\n          form.addEventListener('submit', function (e) {\r\n            e.preventDefault();\r\n          });\r\n  \r\n          ;\r\n          button.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n  \r\n            _this3.on.beforeDisplay();\r\n  \r\n            _this3.displayResults(data);\r\n          });\r\n        } else {\r\n          document.querySelectorAll(this.input)[0].addEventListener('keyup', function (e) {\r\n            _this3.on.beforeDisplay();\r\n  \r\n            _this3.displayResults(data);\r\n          });\r\n        }\r\n  \r\n        ;\r\n      }\r\n    }, {\r\n      key: \"checkArgs\",\r\n      value: function checkArgs() {\r\n        if (!document.querySelectorAll(this.input).length) {\r\n          console.log('Input not found.');\r\n          return false;\r\n        }\r\n  \r\n        if (!document.querySelectorAll(this.results).length) {\r\n          console.log('Results not found.');\r\n          return false;\r\n        }\r\n  \r\n        ;\r\n  \r\n        if (this.button != '') {\r\n          if (!document.querySelectorAll(this.button).length) {\r\n            console.log('Button not found.');\r\n            return false;\r\n          }\r\n  \r\n          ;\r\n        }\r\n  \r\n        if (this.url == '') {\r\n          console.log('Content API Client Library host missing. Please set the host. Must not end in a trailing slash.');\r\n          return false;\r\n        }\r\n  \r\n        ;\r\n  \r\n        if (this.key == '') {\r\n          console.log('Content API Client Library key missing. Please set the key. Hex string copied from the \"Integrations\" screen in Ghost Admin.');\r\n          return false;\r\n        }\r\n  \r\n        ;\r\n        return true;\r\n      }\r\n    }, {\r\n      key: \"validate\",\r\n      value: function validate() {\r\n        if (!this.checkArgs()) {\r\n          return false;\r\n        }\r\n  \r\n        ;\r\n        return true;\r\n      }\r\n    }, {\r\n      key: \"init\",\r\n      value: function init() {\r\n        var _this4 = this;\r\n  \r\n        if (!this.validate()) {\r\n          return;\r\n        }\r\n  \r\n        if (this.defaultValue != '') {\r\n          document.querySelectorAll(this.input)[0].value = this.defaultValue;\r\n  \r\n          window.onload = function () {\r\n            if (!_this4.check) {\r\n              _this4.fetch();\r\n            }\r\n  \r\n            ;\r\n          };\r\n        }\r\n  \r\n        if (this.trigger == 'focus') {\r\n          document.querySelectorAll(this.input)[0].addEventListener('focus', function (e) {\r\n            if (!_this4.check) {\r\n              _this4.fetch();\r\n            }\r\n  \r\n            ;\r\n          });\r\n        } else if (this.trigger == 'load') {\r\n          window.onload = function () {\r\n            if (!_this4.check) {\r\n              _this4.fetch();\r\n            }\r\n  \r\n            ;\r\n          };\r\n        }\r\n      }\r\n    }]);\r\n  \r\n    return GhostSearch;\r\n  }();\r\n  ","/*jshint browser:true */\r\n/*!\r\n* FitVids 1.3\r\n*\r\n*\r\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\r\n* This is an unofficial release, ported by John O'Nolan\r\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\r\n* Released under the MIT license\r\n*\r\n*/\r\n\r\n;(function( $ ){\r\n\r\n  'use strict';\r\n\r\n  $.fn.fitVids = function( options ) {\r\n    var settings = {\r\n      customSelector: null,\r\n      ignore: null\r\n    };\r\n\r\n    if(!document.getElementById('fit-vids-style')) {\r\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\r\n      var head = document.head || document.getElementsByTagName('head')[0];\r\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\r\n      var div = document.createElement(\"div\");\r\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\r\n      head.appendChild(div.childNodes[1]);\r\n    }\r\n\r\n    if ( options ) {\r\n      $.extend( settings, options );\r\n    }\r\n\r\n    return this.each(function(){\r\n      var selectors = [\r\n        'iframe[src*=\"player.vimeo.com\"]',\r\n        'iframe[src*=\"youtube.com\"]',\r\n        'iframe[src*=\"youtube-nocookie.com\"]',\r\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\r\n        'object',\r\n        'embed'\r\n      ];\r\n\r\n      if (settings.customSelector) {\r\n        selectors.push(settings.customSelector);\r\n      }\r\n\r\n      var ignoreList = '.fitvidsignore';\r\n\r\n      if(settings.ignore) {\r\n        ignoreList = ignoreList + ', ' + settings.ignore;\r\n      }\r\n\r\n      var $allVideos = $(this).find(selectors.join(','));\r\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\r\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\r\n\r\n      $allVideos.each(function(){\r\n        var $this = $(this);\r\n        if($this.parents(ignoreList).length > 0) {\r\n          return; // Disable FitVids on this video.\r\n        }\r\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\r\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\r\n        {\r\n          $this.attr('height', 9);\r\n          $this.attr('width', 16);\r\n        }\r\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\r\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\r\n            aspectRatio = height / width;\r\n        if(!$this.attr('name')){\r\n          var videoName = 'fitvid' + $.fn.fitVids._count;\r\n          $this.attr('name', videoName);\r\n          $.fn.fitVids._count++;\r\n        }\r\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\r\n        $this.removeAttr('height').removeAttr('width');\r\n      });\r\n    });\r\n  };\r\n\r\n  // Internal counter for unique video names.\r\n  $.fn.fitVids._count = 0;\r\n\r\n// Works with either jQuery or Zepto\r\n})( window.jQuery || window.Zepto );\r\n","window.onload = function() {\r\n    //Show componets that use javascript\r\n    var allowed = document.querySelectorAll('.js-allowed');\r\n    var denied = document.querySelectorAll('.js-deny');\r\n\r\n    for (var i = 0; i < denied.length; i++) {\r\n        denied[i].style.display = 'none';\r\n    }\r\n    for (var i = 0; i < allowed.length; i++) {\r\n        allowed[i].style.display = 'block';\r\n    }\r\n\r\n\r\n    //Show deferred images\r\n    var images = document.querySelectorAll('.lazy-img');\r\n    for (var i = 0; i < images.length; i++) {\r\n        images[i].setAttribute('src',images[i].getAttribute('data-src'));\r\n    }\r\n\r\n    //Show post-card-images\r\n    var postCardImages = document.querySelectorAll('.post-card-image');\r\n    for (var i = 0; i < postCardImages.length; i++) {\r\n        postCardImages[i].style.display = 'block';\r\n    }\r\n\r\n    //Hide social menu nav in ie, breaks the site otherwise \r\n    //Detect if ie: https://stackoverflow.com/questions/19999388/check-if-user-is-using-ie\r\n    var ua = window.navigator.userAgent;\r\n    var msie = ua.indexOf(\"MSIE \");\r\n\r\n    if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./))  // If Internet Explorer, return version number\r\n    {\r\n        var rightNav = document.querySelectorAll('.site-nav-right');\r\n        if(rightNav) {\r\n            rightNav[0].style.display = 'none';\r\n        }\r\n    }\r\n\r\n};\r\n\r\n","/* eslint-env browser */\r\n\r\n/**\r\n * Gallery card support\r\n * Used on any individual post/page\r\n *\r\n * Detects when a gallery card has been used and applies sizing to make sure\r\n * the display matches what is seen in the editor.\r\n */\r\n\r\n(function (window, document) {\r\n    var resizeImagesInGalleries = function resizeImagesInGalleries() {\r\n        var images = document.querySelectorAll('.kg-gallery-image img');\r\n        images.forEach(function (image) {\r\n            var container = image.closest('.kg-gallery-image');\r\n            var width = image.attributes.width.value;\r\n            var height = image.attributes.height.value;\r\n            var ratio = width / height;\r\n            container.style.flex = ratio + ' 1 0%';\r\n        });\r\n    };\r\n\r\n    document.addEventListener('DOMContentLoaded', resizeImagesInGalleries);\r\n})(window, document);\r\n","/* eslint-env browser */\r\n\r\n/**\r\n * Infinite Scroll\r\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\r\n *\r\n * When the page is scrolled to 300px from the bottom, the next page of posts\r\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\r\n * by {{ghost_head}}.\r\n *\r\n * The individual post items are extracted from the fetched pages by looking for\r\n * a wrapper element with the class \"post-card\". Any found elements are appended\r\n * to the element with the class \"post-feed\" in the currently viewed page.\r\n */\r\n\r\n(function (window, document) {\r\n    // next link element\r\n    var nextElement = document.querySelector('link[rel=next]');\r\n    if (!nextElement) {\r\n        return;\r\n    }\r\n\r\n    // post feed element\r\n    var feedElement = document.querySelector('.post-feed');\r\n    if (!feedElement) {\r\n        return;\r\n    }\r\n\r\n    var buffer = 300;\r\n\r\n    var ticking = false;\r\n    var loading = false;\r\n\r\n    var lastScrollY = window.scrollY;\r\n    var lastWindowHeight = window.innerHeight;\r\n    var lastDocumentHeight = document.documentElement.scrollHeight;\r\n\r\n    function onPageLoad() {\r\n        if (this.status === 404) {\r\n            window.removeEventListener('scroll', onScroll);\r\n            window.removeEventListener('resize', onResize);\r\n            return;\r\n        }\r\n\r\n        // append contents\r\n        var postElements = this.response.querySelectorAll('.post-card');\r\n        postElements.forEach(function (item) {\r\n            // document.importNode is important, without it the item's owner\r\n            // document will be different which can break resizing of\r\n            // `object-fit: cover` images in Safari\r\n            feedElement.appendChild(document.importNode(item, true));\r\n        });\r\n\r\n        // set next link\r\n        var resNextElement = this.response.querySelector('link[rel=next]');\r\n        if (resNextElement) {\r\n            nextElement.href = resNextElement.href;\r\n        } else {\r\n            window.removeEventListener('scroll', onScroll);\r\n            window.removeEventListener('resize', onResize);\r\n        }\r\n\r\n        // sync status\r\n        lastDocumentHeight = document.documentElement.scrollHeight;\r\n        ticking = false;\r\n        loading = false;\r\n    }\r\n\r\n    function onUpdate() {\r\n        // return if already loading\r\n        if (loading) {\r\n            return;\r\n        }\r\n\r\n        // return if not scroll to the bottom\r\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\r\n            ticking = false;\r\n            return;\r\n        }\r\n\r\n        loading = true;\r\n\r\n        var xhr = new window.XMLHttpRequest();\r\n        xhr.responseType = 'document';\r\n\r\n        xhr.addEventListener('load', onPageLoad);\r\n\r\n        xhr.open('GET', nextElement.href);\r\n        xhr.send(null);\r\n    }\r\n\r\n    function requestTick() {\r\n        ticking || window.requestAnimationFrame(onUpdate);\r\n        ticking = true;\r\n    }\r\n\r\n    function onScroll() {\r\n        lastScrollY = window.scrollY;\r\n        requestTick();\r\n    }\r\n\r\n    function onResize() {\r\n        lastWindowHeight = window.innerHeight;\r\n        lastDocumentHeight = document.documentElement.scrollHeight;\r\n        requestTick();\r\n    }\r\n\r\n    window.addEventListener('scroll', onScroll, {passive: true});\r\n    window.addEventListener('resize', onResize);\r\n\r\n    requestTick();\r\n})(window, document);\r\n"]}